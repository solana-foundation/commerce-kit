/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';
import {
  getRefundPolicyDecoder,
  getRefundPolicyEncoder,
  getSettlementPolicyDecoder,
  getSettlementPolicyEncoder,
  type RefundPolicy,
  type RefundPolicyArgs,
  type SettlementPolicy,
  type SettlementPolicyArgs,
} from '.';

export type PolicyData =
  | { __kind: 'Refund'; fields: readonly [RefundPolicy] }
  | { __kind: 'Settlement'; fields: readonly [SettlementPolicy] };

export type PolicyDataArgs =
  | { __kind: 'Refund'; fields: readonly [RefundPolicyArgs] }
  | { __kind: 'Settlement'; fields: readonly [SettlementPolicyArgs] };

export function getPolicyDataEncoder(): Encoder<PolicyDataArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'Refund',
      getStructEncoder([
        ['fields', getTupleEncoder([getRefundPolicyEncoder()])],
      ]),
    ],
    [
      'Settlement',
      getStructEncoder([
        ['fields', getTupleEncoder([getSettlementPolicyEncoder()])],
      ]),
    ],
  ]);
}

export function getPolicyDataDecoder(): Decoder<PolicyData> {
  return getDiscriminatedUnionDecoder([
    [
      'Refund',
      getStructDecoder([
        ['fields', getTupleDecoder([getRefundPolicyDecoder()])],
      ]),
    ],
    [
      'Settlement',
      getStructDecoder([
        ['fields', getTupleDecoder([getSettlementPolicyDecoder()])],
      ]),
    ],
  ]);
}

export function getPolicyDataCodec(): Codec<PolicyDataArgs, PolicyData> {
  return combineCodec(getPolicyDataEncoder(), getPolicyDataDecoder());
}

// Data Enum Helpers.
export function policyData(
  kind: 'Refund',
  data: GetDiscriminatedUnionVariantContent<
    PolicyDataArgs,
    '__kind',
    'Refund'
  >['fields']
): GetDiscriminatedUnionVariant<PolicyDataArgs, '__kind', 'Refund'>;
export function policyData(
  kind: 'Settlement',
  data: GetDiscriminatedUnionVariantContent<
    PolicyDataArgs,
    '__kind',
    'Settlement'
  >['fields']
): GetDiscriminatedUnionVariant<PolicyDataArgs, '__kind', 'Settlement'>;
export function policyData<K extends PolicyDataArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isPolicyData<K extends PolicyData['__kind']>(
  kind: K,
  value: PolicyData
): value is PolicyData & { __kind: K } {
  return value.__kind === kind;
}
