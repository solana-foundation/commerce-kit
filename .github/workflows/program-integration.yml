name: Program Integration Tests

on:
  push:
    branches: [main]
    paths:
      - "program/program/**"
      - "program/Cargo.*"
      - "program/Makefile"
      - "program/tests/integration/**"
      - ".github/workflows/program-integration.yml"
      - "program/clients/rust/**"
      - "program/scripts/**"
  pull_request:
    branches: [main]
    paths:
      - "program/program/**"
      - "program/Cargo.*"
      - "program/Makefile"
      - "program/tests/integration/**"
      - ".github/workflows/program-integration.yml"
      - "program/clients/rust/**"
      - "program/scripts/**"
env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

permissions:
  contents: read

jobs:
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install tools
        run: |
          cargo install shank-cli
          cargo install cargo-llvm-cov

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            ./program
            ./program/tests/integration-tests

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.19

      - name: Setup Bun cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          cd program && make install

      - name: Setup Solana CLI
        uses: ./.github/actions/setup-solana

      - name: Run integration tests with coverage
        run: |
          echo "ðŸ§ª Running integration tests with coverage..."
          cd program/tests/integration-tests
          cargo llvm-cov --lcov --output-path ../../coverage-integration.lcov

      - name: Generate HTML coverage report
        run: |
          cd program/tests/integration-tests
          cargo llvm-cov --html --output-dir ../../coverage-html-integration

      - name: Display coverage summary
        run: |
          cd program/tests/integration-tests
          cargo llvm-cov --summary-only

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage-reports
          path: |
            program/coverage-integration.lcov
            program/coverage-html-integration/
          retention-days: 30

      - name: Show failure logs
        if: failure()
        uses: ./.github/actions/show-failure-logs
        with:
          test-type: "Program integration"
